server {
    listen 8080 ssl;
    server_name 10.0.0.96;

    ssl_certificate /etc/nginx/certs/localhost.crt;  # Caminho do certificado
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    # Configuração para servir arquivos estáticos
    location /static/ {
        alias /app/staticfiles/;
        autoindex off;
    }

    # Configuração para servir arquivos de mídia
    location /media/ {
        alias /app/media/;
        autoindex off;
    }

    # Proxy para WebSocket (Socket.IO)
    location /socket.io/ {
        proxy_pass http://websocket:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # Proxy para WebSocket personalizado
    location /ws/ {
        proxy_pass http://websocket:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

        add_header Access-Control-Allow-Origin "https://10.0.0.96:8080" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
    }

    # Proxy para requisições de autenticação
    location /accounts/ {
        proxy_pass http://web:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy principal para o Gunicorn/Django
    location / {
        proxy_pass http://web:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin "https://10.0.0.96:8080" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        add_header Access-Control-Allow-Credentials "true" always;
    }
}














# ACESSO: HTTPS://LOCALHOST:8080 


# server {
#     listen 8080 ssl;
#     server_name localhost;

#     ssl_certificate /etc/nginx/certs/localhost.crt;  # Caminho do certificado
#     ssl_certificate_key /etc/nginx/certs/localhost.key;
#     # Configuração para servir arquivos estáticos

#     location /static/ {
#         alias /app/staticfiles/;
#         # Impede a listagem de diretórios
#         autoindex off;
#     }

#     # Configuração para servir arquivos de mídia (se necessário)
#     location /media/ {
#         alias /app/media/;
#         # Impede a listagem de diretórios
#         autoindex off;
#     }

#         # Proxy para WebSocket (Socket.IO)
#     location /socket.io/ {
#         proxy_pass http://websocket:4000;  # Nome do serviço Docker + porta
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#     }
#         # Proxy para WebSocket (personalizado)
#     location /ws/ {
#         proxy_pass http://websocket:4000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         add_header Access-Control-Allow-Origin "https://localhost:8080" always;
#         add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
#         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
#         add_header Access-Control-Allow-Credentials "true" always;

#     }


#     # Configuração para redirecionar requisições de autenticação para o Django
#     location /accounts/ {
#         proxy_pass http://web:8080;  # Redireciona para o serviço "web" no Docker Compose
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Configuração para redirecionar requisições para o Gunicorn
#     location / {
#         proxy_pass http://web:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # Aqui também é importante que esses cabeçalhos sejam adicionados em TODAS as respostas,
#         # inclusive em caso de erro (403). A diretiva 'always' assegura isso:
#         add_header Access-Control-Allow-Origin "https://localhost:8080" always;
#         add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
#         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
#         add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
#         add_header Access-Control-Allow-Credentials "true" always;
#     }
# }